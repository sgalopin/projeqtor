# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "bento/ubuntu-16.04"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
  config.vm.network "private_network", ip: "192.168.50.10"
  config.vm.hostname = "projeqtor.example.com"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |v|
    v.memory = 4096
    v.cpus = 2
    v.name = "projeqtor_server"
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  config.vm.provision "shell", inline: <<-SHELL

    ########################
    # Packages and Sources #
    ########################
    sudo -i
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
    apt-get install -y apache2 php7.0-common libapache2-mod-php7.0 php7.0-cli php7.0-pgsql php7.0-gd php7.0-imap php7.0-mbstring php7.0-xml php7.0-zip
    apt-get install -y postgresql-9.5 postgresql-contrib-9.5
    apt-get install unzip
    wget -O /var/tmp/projeqtorV6.1.2.zip 'https://sourceforge.net/projects/projectorria/files/projeqtorV6.1.2.zip/download'
    unzip /var/tmp/projeqtorV6.1.2.zip -d /var/www

    ########################
    # Apache and PHP Setup #
    ########################
    sed -i 's@DocumentRoot.*@DocumentRoot /var/www/projeqtor@' /etc/apache2/sites-available/000-default.conf
    # Note: register_globals deleted from php 5.4.0
    # Note: magic_quotes_gpc deleted from php 5.4.0
    sed -i 's@.*max_input_vars = .*@max_input_vars = 4000@' /etc/php/7.0/apache2/php.ini
    sed -i 's@.*max_execution_time = .*@max_execution_time = 30@' /etc/php/7.0/apache2/php.ini
    sed -i 's@.*memory_limit = .*@memory_limit = 512M@' /etc/php/7.0/apache2/php.ini
    sed -i 's@file_uploads = .*@file_uploads = On@' /etc/php/7.0/apache2/php.ini
    service apache2 restart

    ####################
    # Postgresql Setup #
    ####################
    sed -i "s@#listen_addresses = .*@listen_addresses = '192.168.50.1,192.168.50.10' # what IP address(es) to listen on;@" /etc/postgresql/9.5/main/postgresql.conf
    echo 'host  all postgres    192.168.50.1/32   trust' >> /etc/postgresql/9.5/main/pg_hba.conf
    echo 'host  all postgres    192.168.50.10/32   trust' >> /etc/postgresql/9.5/main/pg_hba.conf
    service postgresql restart

    ######################
    # Directory Creation #
    ######################
    # Directory to store Attachments:
    mkdir -p /var/projeqtor/attach/
    # Temp directory for reports:
    mkdir -p /var/projeqtor/report/
    # Log file name:
    mkdir -p /var/projeqtor/logs/
    # Parameter file name:
    mkdir -p /var/projeqtor/config/

    ####################
    # Right Management #
    ####################
    # Directory /var/www/projeqtor:
    chmod -R 0777 /var/www/projeqtor
    chown -R www-data /var/www/projeqtor
    chgrp -R www-data /var/www/projeqtor
    # Directory /var/projeqtor:
    chmod -R 0777 /var/projeqtor
    chown -R www-data /var/projeqtor
    chgrp -R www-data /var/projeqtor

  SHELL
end
